\documentclass{article}

\title{\texttt{Appendix}}
\author{Louisa Boulaziz}
\date{\today}
\begin{document}

\maketitle 
\tableofcontents
\newpage

<<setup, include=FALSE, cache=FALSE>>=
muffleError <- function(x,options) {}
knit_hooks$set(error=muffleError)
@

\section{Loading in data and packages}
In this section I am loading in the data and all the packages I use to run the analysis. 
<<loadin in data, echo=TRUE, results='markup', include=FALSE>>=


setwd("~/Dropbox (UiO)/Project A/Appendix")

load("louisas_lawyers_V2.rda")


library(broom.mixed)
library(ggplot2)
library(car)
library(DescTools)
library(ResourceSelection)
library(broom)
library(pROC)
library(ggthemes)
library(modelr)
library(sandwich)
library(MatchIt)
library(stargazer)
library(tidyverse)
library(cobalt)
library(MASS)

@

\section{Structure of the data}
I have coded all the parties in all preliminary reference cases and their lawyers from the first judgment issued in CJEU dating to 2016. I have merged this data together with the data used in the Carrubba et al (2008) article. Thus the data consists of all cases dating from 1963 to 1994 for which Carrubba et al has coded the outcome of the case. In the sample I have 2770 observations (year when case was registered). Each new row in the dataset is an applicant or a defendant in a preliminary reference case. The applicant and the defendant are nested in a case, and they either have a lawyer or they do not (binary indicator). If they have a lawyer or lawyer team which has experience this is also flagged (binary indicator). The parties also win or loses a case which is also a binary indicator. In the data I have information about the number of member state governments who submits observations in favor of either the applicant or the defendant. I do also have information about whether or not the commission submitted observations in favor of either the applicant or the defendant. I have a case salience measure -- the total number of governments who submits observations. 
<<structure, echo=TRUE, results='markup'>>=

# Total number of cases in the data
length(unique(data$celex))

table(data$member_state) 

range(data$year)
@


\section{Dependent variable}
I have two variables that measures whether the applicant or defendant won the case. One is at the case level -- \texttt{ecjplaintiffagree} -- and the other one is at the level of the role in the dispute -- \texttt{win}. These variables measures the same thing -- the cases the applicants win and the cases the defendants win. 

<<dependent var, echo=TRUE, results='markup'>>=

prop.table(table(data$ecjplaintiffagree))*100

# Visualizing it 



ggplot(data, aes(as.factor(ecjplaintiffagree))) + 
 geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100), colour = "violet", fill = "violet")+
  ylab("Percent of cases") + 
  xlab("")+
  ggtitle("Who wins in the CJEU?")+
  theme_minimal() +
  scale_x_discrete(labels=c("Defendant", "Applicant"))




@
\section{Main independent variables}
I focus on three main explanatory variables in the analysis: \texttt{experience}, \texttt{lawyer} and \texttt{salience}. I describe them more in detail below. 

\subsection{Experience}
The experience-variable is grouped at the level of the role in the legal dispute. This means that it measures whether or not the applicants and the defendants have experienced lawyers. The variable shows whether or not the applicant or the defendant has a lawyer or lawyer team which have prior litigation experience. Note that all 1s represent lawyers and lawyer teams that have at least argued one prior case at the CJEU. All 0s represent non-lawyers -- that means when applicants and defendants come to court without representation the variable shows 0. The variable also shows 0 for applicant and defendants who come to court with lawyers without prior litigation experience. 

<<treatment, echo=TRUE, results='markup'>>=
# Filtering out observations with lawyers
experience <- data %>% 
  filter(lawyer == 1)

experience %>% 
  group_by(experience) %>% 
  ggplot(aes(as.factor(experience))) + 
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100), colour = "violet", fill = "violet") + 
  ylab("Percent of observations") + 
  ggtitle("Percent of observations with experienced lawyers") + 
  theme_minimal() + 
  xlab("") + 
  scale_x_discrete(labels=c("First-time lawyers", "Repeat lawyers"))


experience <- table(data$experience)
prop.table(experience)*100

rm(experience)

prop.table(table(experience$experience))*100

@

\subsection{Lawyer}
This variable is at the level of the party in the dispute.
<<lawyer, echo=TRUE, results='markup'>>=
# Who does not have lawyers?
no_lawyer <- data %>% 
  filter(lawyer == 0)

prop.table(table(no_lawyer$type))*100

## Graphic of representation
data %>% 
  group_by(lawyer) %>% 
  ggplot(aes(as.factor(lawyer))) + 
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100), colour="violet", fill = "violet") + 
  ylab("Percent of observations") + 
  ggtitle("Percent of observations with legal representation")+ 
  xlab("") + 
  theme_minimal() + 
  scale_x_discrete(labels=c("No representation", "Legal representation"))

lawyer <- table(data$lawyer)
prop.table(lawyer)*100

rm(lawyer)

@

\subsection{Salience}
Salience is measured as number of EU governments that submit observations in cases referred to the CJEU. I create this variable by adding up the number of governments that submits observations in favor of the applicant and in favor of the defendant. I create a salience measure to seperate between salient and non salient cases. To make this variable I flag all cases that has above the average submitted observations
<<salience, echo=TRUE, results='markup'>>=

summary(data$salience) # MEAN

length(unique(data$celex)) # Total number of cases 

table(data$salience)

# Total number of cases
data %>% 
  group_by(celex) %>% 
  count(salience) %>% 
  ggplot(aes(as.factor(salience))) + 
  geom_bar(color = "violet", fill = "violet") + 
  xlab("No. of governments") + 
  ylab("No. of cases") + 
  theme_minimal() +
  ggtitle("Submitted observations by EU member state governments")

# Percentage of cases 
data %>% 
  group_by(celex) %>% 
  count(salience) %>% 
  ggplot(aes(as.factor(salience))) + 
  geom_bar(color = "violet", fill = "violet", aes(y = (..count..)/sum(..count..)*100)) + 
  xlab("No. of governments") + 
  ylab("Percent of cases") + 
  theme_minimal() +
  ggtitle("No. of observations submitted by 
          member state governments")

## Binary measure of salience

table(data$binary_salience)

salience <- data %>% 
  filter(salience != 0)

mean(salience$salience)

salience <- salience %>% 
  group_by(member_state) %>% 
  summarise_at(vars(salience), 
               list(name = mean))

class(data$member_state)
data$time_period_salience <- ifelse(data$member_state == "6", 1.254545, ifelse(data$member_state == "9", 1.512658,
              ifelse(data$member_state == "10", 1.614943, 
                     ifelse(data$member_state == "12", 1.636095, ifelse(data$member_state)))))


data$binary_salience <- 
  ifelse(data$salience > data$time_period_salience, 1, 0)

table(data$salience)
table(data$binary_salience)

prop.table(table(data$binary_salience))*100
@

\section{Control variables}
\subsection{Type of actor and opponent in court}

<<type, echo=TRUE, results='markup'>>=

prop.table(table(sample1$type))*100

data %>% 
  ggplot(aes(as.factor(type))) + 
  geom_bar(color = "violet", fill = "violet", aes(y = (..count..)/sum(..count..)*100)) + 
  xlab("") + 
  ylab("Percent of observations") + 
  theme_minimal() +
  ggtitle("Who litigates before the CJEU?")


data %>% 
  filter(type == "State institution") %>%
   ggplot(aes(type_opponent)) +
   geom_bar(color = "violet", fill = "violet", aes(y = (..count..)/sum(..count..)*100)) + 
  xlab("") + 
  ylab("Percent of cases") + 
  theme_minimal() +
  ggtitle("Who do companies meet in Court?")



prop.table(table(data$type))*100

prop.table(table(data$type_opponent))*100

@

\subsection{Role in legal dispute}
<<role in legal dispute, echo=TRUE, results='markup'>>=

data %>% 
  select(celex, role) %>% 
  group_by(celex) %>% 
  ggplot(aes(as.factor(role))) + 
  geom_bar(color = "violet", fill = "violet", aes(y = (..count..)/sum(..count..)*100)) + 
  xlab("") + 
  ylab("Percent of cases") + 
  theme_minimal() +
  ggtitle("Who litigates before the CJEU?")


@

\subsection{Government support}
This variable measures whether or not the applicant or defendant had government support. This is measured has a binary indicator. 
<<government submitted observations, echo=TRUE, results='markup'>>=

table(data$government_support)

prop.table(table(data$government_support))*100
# Who has government support in Court? 


data %>% 
  filter(government_support > 0) %>% 
  ggplot(aes(as.factor(government_support))) + 
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100), colour = "violet", fill = "violet") + 
  ylab("Percent of observations") + 
  ggtitle("Litigants that receive government support in Court?")+
  xlab("No. of government observations") + 
  theme_minimal()
  
data %>% 
  ggplot(aes(as.factor(government_support), fill = as.factor(type))) + 
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100)) + 
  ylab("Percent of cases") + 
  labs(fill = "Government support")  + 
  ggtitle("Who receives government support?")+ 
  xlab("")+
  theme_minimal()


data$government_support_binary <- 
  ifelse(data$government_support > 0, 1, 0)

table(data$government_support)
table(data$government_support_binary)


data %>% 
  ggplot(aes(as.factor(government_support_binary))) + 
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100), colour = "violet", fill = "violet") + 
  ylab("Percent of observations") + 
  ggtitle("Litigants that receive
          government support in Court")+
  theme_minimal() + 
  xlab("")+
  scale_x_discrete(labels=c("Not supported", "Supported"))

@

\subsection{Commission support}
This variable indicates whether or not the applicant or defendant in the legal dispute has support from the Commission. The variable is binary. Support from the Commission is flagged as 1.  
<<commission submitted observations, echo=TRUE, results='markup'>>=

table(data$commission_support)
prop.table(table(data$commission_support))*100
# Who has commission support in Court? 


data %>% 
  ggplot(aes(as.factor(commission_support))) + 
  geom_bar(position = "dodge", aes(y = (..count..)/sum(..count..)*100), colour= "violet", fill = "violet") + 
  ylab("Percent of observations") + 
  ggtitle("Litigants that receive 
          Commission support")+ 
  xlab("")+ 
  scale_x_discrete(labels = c("Not supported", "Supported"))+
  theme_minimal()

@

\subsection{Number of member states}
<<member state, echo=TRUE, results='markup'>>=

table(data$member_state)

@


\section{Descriptive statistics}
This table gives an overview of the numeric variables in the data.
<<descriptive stats, echo=TRUE, results='markup'>>=


stats_data <- data.frame(data)
names(stats_data)

stats_data <- stats_data %>% 
  select(4:5, 7:11, 15)

stargazer(stats_data, type = "text")

rm(stats_data)
@

\section{Treatment-is-lawyer sample}
<<names love plot, echo=TRUE, include=FALSE, results='markup'>>=
# Creating variable names for the plot
var_names <- data.frame(old = c("role_defendant", "type_Company", "type_EU institution", "type_Individual", "type_NGO", "type_Other", "type_State institution", "binary_salience", "type_opponent_Company",
                                "type_opponent_EU institution", "type_opponent_Individual", "type_opponent_NGO", "type_opponent_Other", "type_opponent_State institution",
                                "member_state_10",
                                "member_state_12",
                                "member_state_6",
                                "member_state_9",
                                "government_support", 
                                "commission_support"),
  
  new = c("Role Defendant", "Company", "EU institution", "Individual", "NGO", "Other", "State institution", "Salience (binary)", "Company opponent", "EU institution opponent", "Individual opponent", "NGO opponent", "Other opponent", "State institution opponent", "Members 10", "Members 12", "Members 6", "Members 9", "Government support", "Commission support"))
@

\subsection{Matching}
<<treatment - lawyers, echo=TRUE, results='markup', warning=FALSE>>=

# Treatment = having a lawyer
sample_1 <- matchit(lawyer ~ role + 
                      type + binary_salience + 
                         type_opponent 
                    + member_state 
                    + government_support 
                    + commission_support,
                       method = "cem", 
                       estimand = "ATT", 
                       data = data)


sample1 <- match.data(sample_1, data=data)

love.plot(sample_1, 
          title = "Treatment = having a lawyer", var.names = var_names)


### Add more plots 

### Review the sample 

length(unique(sample1$celex))

prop.table(table(sample1$ecjplaintiffagree))

table(sample1$type)

sample1$type <- relevel(sample1$type, ref = "Individual")

sample1$type_opponent <- relevel(sample1$type_opponent, ref = "Individual")


@

\subsection{Analysis}
<<treatment is lawyer, echo=TRUE, results='markup'>>=

## Estimating a model without interaction
law1 <- glm(win~ lawyer + role + type + 
            type_opponent + member_state + 
            binary_salience 
           + government_support 
           + commission_support, 
          family = binomial(link = "logit"), 
          data = sample1)

beta_law1 <- law1$coefficients

tab_law1 <- (exp(beta_law1)-1)*100
tab_law1

vcov_law1 <- vcovHC(law1, "HC1")

## Estimating a model with controls + interaction

law <- glm(win~ lawyer + role + type + 
            type_opponent + member_state + 
            binary_salience 
           + lawyer*binary_salience
           + government_support 
           + commission_support, 
          family = binomial(link = "logit"), 
          data = sample1)



beta_law <- law$coefficients

tab_law <- (exp(beta_law)-1)*100
tab_law


vcov_law <- vcovHC(law, "HC1")

stargazer(law1, law, type = "text", se = list(vcov_law1, vcov_law))

stargazer(law1, law, type = "latex", se = list(vcov_law1, vcov_law), style = "all2",  
          single.row = TRUE, no.space = TRUE, font.size = "scriptsize", align = TRUE,
          dep.var.caption = "Binomial logistic regression", 
          dep.var.labels = "Favorable ruling", 
         keep = c("lawyer", "role", 
                  "type", "type_opponent", 
                   "binary_salience", 
                  "government_support", 
                  "commission_support", "Constant"), 
         covariate.labels = c("Lawyer",
                              "Defendant",                 
"State institution",    
"Company",             
"Other",                             
"NGO",
  "Opponent Company",                            
"Opponent Other",                         
                             
 "Opponent NGO", 
                             
 "Opponent State Institution", 
                              "Salience", 
                              "Government support", 
                              "Commission support", 
                              "Interaction lawyer * salience"), flip = TRUE)







@
\subsection{Plotting effects}

<<scenario1, echo=TRUE, results='markup'>>=


law$vcov_law <- vcov_law

law1$vcov_law <- vcov_law1
# Setting seed 
set.seed(24)

simBetas <- mvrnorm(n = 1000, 
                    mu = coefficients(law1), 
                    Sigma = law1$vcov_law)


names(coefficients(law1))


xMatrix <- cbind(1, #the intercept
                 1, # Party has a lawyer
                 0, # defendant
                 0, # other
                 1, # Company
                 0, # NGO
                 0, # SI
                 0, # opponent other
                 0, # opponent compnay
                 0, # opponent NGO
                 1, # opponent state institution
                 1, # M 12
                 0, # M 6
                 0, # M 9, 
                 c(0, 1), # Salience
                 0, # Government support, 
                 0 # Commission support
                  # interaction
                 )




ncol(simBetas) == ncol(xMatrix) #yay!!

### Calculating predicted probabilities: Her multipliserer du simuleringen med xmatrisen 
xBetaMatrix <- xMatrix %*% t(simBetas ) ## this just means x times the betas
predProbs <- 1/(1+exp(-xBetaMatrix)) #This is the predicted probability, for another type of model you would replace this step with an appropriate formula


### Getting point estimates and confidence intervals: 
quantileValues <- apply(X = predProbs,  ## read up on the apply() family of functions!
                        MARGIN = 1, ## this means we are applying a function to all the rows
                        FUN =  ## The fun argument defines what I want to do with all the rows
                          ## What we want to do here is to use quantile to get the quantiles representing the lower and upper
                          ### bounds of the confidence intervals and our point estimates: 
                          quantile, probs = c(.05,.5,.95))
quantileValues <- as.data.frame(t(quantileValues)) 

plotPoints <- cbind(c("Non-salient", "Salient"),quantileValues)
plotPoints
colnames(plotPoints) <- c("Salient", "lower", "estimate", "upper")



ggplot(plotPoints, 
       aes(x = Salient, 
           y = estimate, 
           ymin = lower, 
           ymax = upper)) +
  geom_errorbar(width =.2)+
  geom_point()+
  ylim(0,1)+
  ylab("Predicted probability of a favorable ruling")+
  xlab("")+
  theme_minimal() + 
  ggtitle("The effect of having a lawyer 
          in a salient and in a non-salient case")

@

The figure shows the different effect lawyers on the decision-making of the CJEU. The two different estimates shows the difference in the effect of lawyers in cases that are salient and non-salient. The error bars illustrate the predicted probability of a favorable ruling for a company (applicant) with legal representation litigating against a state institution (defendant), without government or Commission support. 
Having legal representation in preliminary reference cases before the CJEU increases the likelihood of a favorable ruling. The effect of the legal representation on the decision-outcome is higher in non-salient cases, than in salient cases. 

\section{Treatment-is-experience sample}
\subsection{Matching}
<<matching lawyer sample, echo=TRUE, results='markup', warning=FALSE>>=

# Filtering out a sample consisting of parties with only lawyers
df <- data %>% 
  filter(lawyer == 1) %>% 
  ungroup()


sample_2 <- matchit(experience ~ role + type 
                    + binary_salience + 
                         type_opponent 
                    + member_state + 
                    government_support 
                    + commission_support, 
                       method = "cem", 
                       estimand = "ATT", 
                       data = df)


sample2 <- match.data(sample_2, data=df)


# Checking balance 

love.plot(sample_2, var.names = var_names, title = "Treatment = experience")

# Add more balance plots 

length(unique(sample2$celex))

table(sample2$role)

prop.table(table(sample2$ecjplaintiffagree))

prop.table(table(sample2$experience))*100

sample2$type <- relevel(sample2$type, ref = "Individual")

sample2$type_opponent <- relevel(sample2$type_opponent, ref = "Individual")

prop.table(table(sample2$type))*100
table(sample2$type_opponent)

prop.table(table(sample2$ecjplaintiffagree))*100



@


\subsection{Analysis}
<<we have lawyers, echo=TRUE, results='markup'>>=

## Estimating a model with controls 
m1 <- glm(win~ experience + role + type + 
            type_opponent + member_state + 
            binary_salience + 
          + government_support 
          + commission_support, 
          family = binomial(link = "logit"), 
          data = sample2)

beta1 <- m1$coefficients

tab1 <- (exp(beta1)-1)*100
tab1

vcov_m1 <- vcovHC(m1, "HC1")

# Model with interaction term 
m2 <- glm(win~ experience + role + type + 
            type_opponent + member_state + 
            binary_salience + 
            experience*binary_salience
          + government_support 
          + commission_support, 
          family = binomial(link = "logit"), 
          data = sample2)

beta2 <- m2$coefficients

tab2 <- (exp(beta2)-1)*100
tab2



vcov_m2 <- vcovHC(m2, "HC1")

stargazer(m1, m2, type = "text", se = list(vcov_m1, vcov_m2))


stargazer(m1, m2, type = "latex", 
          se = list(vcov_m1, vcov_m2), 
          style = "all2",  
          single.row = TRUE, 
          no.space = TRUE, 
          font.size = "scriptsize", 
          align = TRUE,
          dep.var.caption = 
            "Binomial logistic regression", 
          dep.var.labels = "Favorable ruling", 
         keep = c("Constant","experience", "role", 
                  "type", 
                  "type_opponent", 
                   "binary_salience",
                  "government_support", 
                  "commission_support"), 
         covariate.labels = c("Experience",
                              "Defendant",
                              "Other", 
                              "Company", "NGO",
                              "State institution", 
                              "Opponent Other", 
                              "Opponent Company",
                              "Opponent NGO", 
                              "Opponent State institution",
                              "Salience", 
                              "Government support",
                              "Commission support", 
                              "Interaction experience * salience"
                  ))


sample2 %>% 
  group_by(celex) %>% 
  ggplot(aes(type, fill = as.factor(experience))) +
  geom_bar(aes(y = (..count..)/sum(..count..)*100), position = "dodge") + 
  ylab("Percent of cases") + 
  labs(fill = "Experienced attorney") + 
  scale_fill_manual(values = c( "purple", "red")) + 
  ggtitle("Who has experience in the CJEU?")+ 
  xlab("")+ 
  theme_minimal()

sample2 %>% 
  group_by(celex) %>% 
  filter(type != "NGO" & type != "Other") %>% 
  ggplot(aes(as.factor(win), fill = as.factor(experience))) +
  labs(fill = "Experienced attorney")+
  geom_bar(aes(y = (..count..)/sum(..count..)*100), position = "dodge") + 
  ylab("Percent of cases") + 
  ggtitle("Who wins in the CJEU?")+ 
  xlab("")+ 
  theme_minimal() + 
  facet_wrap(~ type) + 
  xlab("Winning is flagged 1")+ 
  scale_fill_manual(values = c( "purple", "red"))

table(sample2$type)


@

\subsection{Plotting effects -- creating scenarios}
<<scenario2, echo=TRUE, results='markup'>>=

# Saving my se's in the model object


m2$cluster_m2 <- vcov_m2
m1$cluster <- vcov_m1
# Setting seed 
set.seed(24)

simBetas <- mvrnorm(n = 1000, 
                    mu = coefficients(m1), 
                    Sigma = m1$cluster)


names(coefficients(m1))
table(sample2$member_state)
xMatrix <- cbind(1, #the intercept
                 1, # experience
                 0, # defendant
                 0, # other
                 1, # Company
                 0, # NGO
                 0, # State institution 
                 0, # opponent other
                 1, # opponent company
                 0, # opponent NGO
                 0, # opponent state institution
                 1, # M 12
                 0, # M 6
                 0, # M 9, 
                   
                 c(0, 1), # binary salience,
                 0, # Government support, 
                 0 # Commission support
                
                 )



ncol(simBetas) == ncol(xMatrix) #yay!!

### Calculating predicted probabilities: Her multipliserer du simuleringen med xmatrisen 
xBetaMatrix <- xMatrix %*% t(simBetas ) ## this just means x times the betas
predProbs <- 1/(1+exp(-xBetaMatrix)) #This is the predicted probability, for another type of model you would replace this step with an appropriate formula


### Getting point estimates and confidence intervals: 
quantileValues <- apply(X = predProbs,  ## read up on the apply() family of functions!
                        MARGIN = 1, ## this means we are applying a function to all the rows
                        FUN =  ## The fun argument defines what I want to do with all the rows
                          ## What we want to do here is to use quantile to get the quantiles representing the lower and upper
                          ### bounds of the confidence intervals and our point estimates: 
                          quantile, probs = c(.05,.5,.95))
quantileValues <- as.data.frame(t(quantileValues)) 

plotPoints <- cbind(c("Salient", "Non-salient"),quantileValues)
plotPoints
colnames(plotPoints) <- c("Salient", "lower", "estimate", "upper")



ggplot(plotPoints, 
       aes(x = Salient, 
           y = estimate, 
           ymin = lower, 
           ymax = upper)) +
  geom_errorbar(width =.2)+
  geom_point()+
  ylim(0,1)+
  ylab("Predicted probability of a favorable ruling")+
  xlab("")+
  theme_minimal() + 
  ggtitle("Effect of experienced legal counsel 
          in salient and non-salient cases")


@

\section{Digasnostics}
The underlying assumption of the logistical regression model are that  (1) the dependent variable is binary; (2) the probability curve is S-shaped and the logit curve is linear; (3) there are no influential observations; (4) there is no multicollinearity among the predictors; (5) there are no empty cells; (6) there is no "complete separation"; (7) no omitted variable bias and (8) the observations are independent and identically distributed. 

\hfill \break In this section I go through each of the assumptions and evaluate the model where I control salience, role and type of actor. 

\hfill \break The first assumption holds as the dependent variable is binary -- 0 for lost case and 1 for won case. The assumption that the observations are independent and identically distributed is not relevant because I am dealing with observational data -- and the data at hand is the sample of cases are more or less equal to universe of cases. No omitted variable bias is a theoretical assumption. There are many unobserved factors that may affect not just the assignment to treatment, but also the decision of the Court and the cases that end up in the CJEU in the first place. This is not controlled for because many of the mechanisms that may affect assignment to treatment, cases being referred and the decision of the CJEU are unobservable. 


\subsubsection{The regression has the shape of an S}
In order to investigate if the second assumption holds I make sure that the relationship between the independent variables and the logit-outcome is linear. To show this graphically is difficult when the variables are categorical -- like most of my variables. 
\subsubsection{Influential values}
Checking for influential values. Plotting the standardized residuals. The standard normal distribution lies between -4 and 4. Values above three indicates outliers and should be further investigated as they might affect the results. 

<<influential values, echo=TRUE, results='markup'>>=
# Sample1 model
model.data <- augment(law) %>% 
  mutate(index = 1:n())

model.data %>% 
  top_n(3, .cooksd)

ggplot(model.data, aes(index, .std.resid))+
  geom_point(aes(color = win), alpha = .5) + 
  theme_minimal() + 
  ylab("Standardized residuals") + 
  xlab("Observations")

# Manual count 
model.data %>% 
  filter(abs(.std.resid) > 3)

# Sample2 model
model.data <- augment(m2) %>% 
  mutate(index = 1:n())

model.data %>% 
  top_n(3, .cooksd)

ggplot(model.data, aes(index, .std.resid))+
  geom_point(aes(color = win), alpha = .5) + 
  theme_minimal() + 
  ylab("Standardized residuals") + 
  xlab("Observations")

# Manual count 
model.data %>% 
  filter(abs(.std.resid) > 3)


@
\subsubsection{Multicollinearity} 
VIF-test measures how much of the variance in each independent variable can be explained by the other variables in the analysis. As a general rule of thumb a VIF-value under 5 indicates no multicolinearity, whilst values between 5 and 10 is considered no ideal, but yet not very problematic. Values above 10 indicates strong multicolinearity(ibid). 

<<vif, echo = TRUE, results='markup'>>=

vif(law)
vif(m2)
@
Running the VIF-test I find that all my independent variables have VIF-values between 1 and 3 which indicates no multicolinearity. 

\subsubsection{Complete seperation}
Checking for complete separation is easily done by plotting the data. The plot below indicates that also this assumption is met. Checking for empty cells is unecessary are observations with missing values are not included in the model. 

\subsection{Goodness of fit}
\subsubsection{McFadden's pseudo R2}
McFadden's pseudo R2 is a measure that compares the log-likelihood value for my model and compares it to the log-likelihood value of a model without any variables -- an intercept-only model. The value ranges from zero to one. Values closer to 1 indicates good predictive power. Values closer to zero indicates no predictive power. The results show that the model is better than an intercept-only model, however, the model does not explain much of the variation. The models with more variables have slightly higher McFadden scores. 

<<pseudo r, echo = TRUE, results='marup'>>=

PseudoR2(law, which = c("McFadden", "AIC", "BIC", "logLik"))
PseudoR2(law)

PseudoR2(m2, which = c("McFadden", "AIC", "BIC", "logLik"))
PseudoR2(m2)


@

\subsubsection{Hosmler-Lemeshow-test}
Tests ho good the model fits the data by comparing observed and predicted values -- meaning that it compares the observed, real values of 1 and + to the models fitted values (ibid). The test does this by comparing subgroups of the population estimated. The Hosmer-Lemeshow-test is not supposed to give significant results, because this means that the model is not a good fit for the data. The results from running the test are not significant suggesting that the model is good at describing the data. 

<<HL-test, echo=TRUE, results='markup'>>=

############# Sample1 model
hl <- hoslem.test(law$y, 
                  fitted(law), 
                  g = 10) 
# G= 10 ten subgroups
hl

# Shows difference in 
# observed and expected Y-values
# for ten subgroups
cbind(hl$expected, hl$observed)


############# Sample2 model 
hl <- hoslem.test(law$y, 
                  fitted(law), 
                  g = 10) 
# G= 10 ten subgroups
hl
# Shows difference in 
# observed and expected Y-values
# for ten subgroups
cbind(hl$expected, hl$observed)

@

\section{How well does my model predict?}
I am modelling predicted probabilitites. To estimate how well my models predict, a ROC-cruve can be helpful (Receiving Operating Characteristics). When using logistical regression, the goal is a model that predicts the outcome of the indepdent variable corectly at all times. The ROC-curve shows how well my model predics by determining the relationship between true positive values (the predictions my model predics as 1 that is observed to be 1) and false positive values (the prediction my model predicts as 1 but is actually 0) using various cut-off values. I create a ROC-curve to evaluate the overall performance of my model. The ROC-curve defines the optimal cut-off value for me -- indicating at which point from 0 to 100 my model predicts correctly. Is my model correct in 70 percent of all the instances? Is my model correct in 60 percent of all instances?

<<roc-curve, echo=TRUE, results='markup'>>=

# Sample1 model 
preds <- predict(law, 
                 sample1, 
                 type = "response")

roc_obj <- roc(sample1$win, preds)

auc_m2 <- auc(roc_obj)

auc_m2 <- round(auc_m2, digits = 3)

law_roc <- ggroc(roc_obj, color="pink", size = 2) + 
  ggtitle(paste0("ROC Curve ", "(AUC =", auc_m2, ")")) + 
  theme_minimal()

law_roc

test <- table(predicted = ifelse(preds > auc_m2, 1, 0), 
              observed = sample1$win)

test


# Sample3 model 
preds <- predict(m2, 
                 sample2, 
                 type = "response")

roc_obj <- roc(sample2$win, preds)

auc_m2 <- auc(roc_obj)

auc_m2 <- round(auc_m2, digits = 3)

m2_roc <- ggroc(roc_obj, color="pink", size = 2) + 
  ggtitle(paste0("ROC Curve ", "(AUC =", auc_m2, ")")) + 
  theme_minimal()

m2_roc
test <- table(predicted = ifelse(preds > auc_m2, 1, 0), 
              observed = sample2$win)

test
@

\hfill \break Area under the curve (AUC) equal to 1 means that the model makes perfect predictions, meaning that the model predicts Y = 1 when Y=1 is observed in all incidents. The model predicts correctly in approximately 84 percent of all incidents. The model I have made is able to classify Y = 1 and Y = 0 correctly in approximately 84 percent of the time.  

\subsection{Predictions without main explanatory variables}
\hfill \break Here I will check to see if my models predics worse without legal representation and lawyer experience. 

<<extra trial, echo=TRUE, results = 'markup'>>=

law2 <- glm(win~role + type + 
            type_opponent + member_state
           + government_support 
           + commission_support, 
          family = binomial(link = "logit"), 
          data = sample1)

preds <- predict(law2, 
                 sample1, 
                 type = "response")

roc_obj <- roc(sample1$win, preds)

auc_m2 <- auc(roc_obj)

auc_m2 <- round(auc_m2, digits = 3)

law_roc <- ggroc(roc_obj, color="pink", size = 2) + 
  ggtitle(paste0("ROC Curve ", "(AUC =", auc_m2, ")")) + 
  theme_minimal()

law_roc

test <- table(predicted = ifelse(preds > auc_m2, 1, 0), 
              observed = sample1$win)

test


# Experience model 
m3 <- glm(win~ role + type + 
            type_opponent + member_state 
          + government_support 
          + commission_support, 
          family = binomial(link = "logit"), 
          data = sample2)

preds <- predict(m3, 
                 sample2, 
                 type = "response")

roc_obj <- roc(sample2$win, preds)

auc_m2 <- auc(roc_obj)

auc_m2 <- round(auc_m2, digits = 3)

law_roc <- ggroc(roc_obj, color="pink", size = 2) + 
  ggtitle(paste0("ROC Curve ", "(AUC =", auc_m2, ")")) + 
  theme_minimal()

law_roc

test <- table(predicted = ifelse(preds > auc_m2, 1, 0), 
              observed = sample1$win)

test


@

\subsection{Predictions without government and Commission supports}

<<extra extra tria2, echo=TRUE, results = 'markup'>>=

law2 <- glm(win~role + lawyer + type + 
            type_opponent + member_state
           + salience + salience*lawyer, 
          family = binomial(link = "logit"), 
          data = sample1)

preds <- predict(law2, 
                 sample1, 
                 type = "response")

roc_obj <- roc(sample1$win, preds)

auc_m2 <- auc(roc_obj)

auc_m2 <- round(auc_m2, digits = 3)

law_roc <- ggroc(roc_obj, color="pink", size = 2) + 
  ggtitle(paste0("ROC Curve ", "(AUC =", auc_m2, ")")) + 
  theme_minimal()

law_roc

test <- table(predicted = ifelse(preds > auc_m2, 1, 0), 
              observed = sample1$win)

test


# Experience model 
m3 <- glm(win~ experience + role + type + 
            type_opponent + member_state +
          salience + experience*salience , 
          family = binomial(link = "logit"), 
          data = sample2)

preds <- predict(m3, 
                 sample2, 
                 type = "response")

roc_obj <- roc(sample2$win, preds)

auc_m2 <- auc(roc_obj)

auc_m2 <- round(auc_m2, digits = 3)

law_roc <- ggroc(roc_obj, color="pink", size = 2) + 
  ggtitle(paste0("ROC Curve ", "(AUC =", auc_m2, ")")) + 
  theme_minimal()

law_roc

test <- table(predicted = ifelse(preds > auc_m2, 1, 0), 
              observed = sample1$win)

test


@
\end{document}